<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on AnfieldQi`s Blog</title>
    <link>https://anfieldqi.github.io/posts/</link>
    <description>Recent content in Posts on AnfieldQi`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 19 Apr 2020 14:39:14 +0800</lastBuildDate>
    
	<atom:link href="https://anfieldqi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python面向对象</title>
      <link>https://anfieldqi.github.io/2020/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sun, 19 Apr 2020 14:39:14 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>一些面向对象的知识 1.访问限制 算了其实跟其他的都一样但是还是写一下 // 使用__ class Student(object): def __init__(self, name, score): self.__name = name self.__score = score def print_score(self): print(&amp;#39;%s: %s&amp;#39; % (self.__name, self.__score)) //外部的实例变量已经无法</description>
    </item>
    
    <item>
      <title>Python函数式</title>
      <link>https://anfieldqi.github.io/2020/python%E5%87%BD%E6%95%B0%E5%BC%8F/</link>
      <pubDate>Sun, 19 Apr 2020 10:07:01 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/python%E5%87%BD%E6%95%B0%E5%BC%8F/</guid>
      <description>python函数式 1.四个高阶函数 1.map map(func,Iterable) //fnuc依次作用至每一个Iterable元素,并将结果作为Iterator返回 2.filter filter(func,Iterable) //fnuc依次</description>
    </item>
    
    <item>
      <title>Android逆向入门</title>
      <link>https://anfieldqi.github.io/2020/android%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 18 Apr 2020 20:52:47 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/android%E5%9F%BA%E7%A1%80/</guid>
      <description>[TOC] Android相关文件结构 1. APK的组成 AndroidManifest.xml: Android的基础配置文件，包含了与apk相关的大量信息 asserts:资源文件目录，在jav</description>
    </item>
    
    <item>
      <title>Python变量作用域</title>
      <link>https://anfieldqi.github.io/2020/python%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F/</link>
      <pubDate>Thu, 16 Apr 2020 21:52:53 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/python%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid>
      <description>python 变量及其作用域 四个作用域 LEGB原则： L(local)：局部作用域 E(Enclosing)：闭包函数外的函数中 G(global)：全局作用</description>
    </item>
    
    <item>
      <title>Python嵌套函数</title>
      <link>https://anfieldqi.github.io/2020/python%E5%B5%8C%E5%A5%97%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 16 Apr 2020 21:52:44 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/python%E5%B5%8C%E5%A5%97%E5%87%BD%E6%95%B0/</guid>
      <description>python嵌套函数 在 Python 中，函数高级用法都与嵌套函数紧密相关，所以有必要先熟悉一下嵌套函数。 使用场景 封装 - 数据隐藏 贯彻 DRY 原则 闭包 1.封装，数</description>
    </item>
    
    <item>
      <title>Python装饰器</title>
      <link>https://anfieldqi.github.io/2020/python%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Thu, 16 Apr 2020 21:52:36 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/python%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>Python装饰器 1.概念 装饰器是可调用的对象，其参数是另外一个函数，装饰器可能会处理被装饰的函数然后把它返回，或者将其替换成另外一个函数或</description>
    </item>
    
    <item>
      <title>Shell学习</title>
      <link>https://anfieldqi.github.io/2020/shell%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 16 Apr 2020 21:52:28 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/shell%E5%AD%A6%E4%B9%A0/</guid>
      <description>shell 开始 #!/bin/bash 与python一样，告诉其路径 Shell 变量 变量名和=之间不准有空格 命名规则 规则 命名只能使用英文字母，数字和下划线，首个字符不能以数字开头 中</description>
    </item>
    
    <item>
      <title>Typora使用</title>
      <link>https://anfieldqi.github.io/2020/typora%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 15 Apr 2020 21:47:51 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/typora%E4%BD%BF%E7%94%A8/</guid>
      <description>我觉得最好用的一款markdown编辑器</description>
    </item>
    
    <item>
      <title>Hugo&#43;Github Pages</title>
      <link>https://anfieldqi.github.io/2020/hugo-github-pages/</link>
      <pubDate>Sun, 12 Apr 2020 13:10:40 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/hugo-github-pages/</guid>
      <description>Hugo简介 Hugo是由Steve Francis基于Go语言开发的静态网站构建工具。 Hugo博客搭建流程 准备工作 github账号：使用git</description>
    </item>
    
    <item>
      <title>Flask框架学习</title>
      <link>https://anfieldqi.github.io/2020/flask%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 11 Apr 2020 16:28:09 +0800</pubDate>
      
      <guid>https://anfieldqi.github.io/2020/flask%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
      <description>Flask框架 1.安装flask 安装flask框架并在项目中导入 2.基本文件结构 static:存放静态资源，图片，js,css等 templa</description>
    </item>
    
  </channel>
</rss>
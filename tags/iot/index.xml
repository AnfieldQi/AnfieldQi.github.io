<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iot on AnfieldQi`s Blog</title>
    <link>http://anfieldqi.top/tags/iot/</link>
    <description>Recent content in iot on AnfieldQi`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 20 Dec 2020 17:01:14 +0800</lastBuildDate>
    
	<atom:link href="http://anfieldqi.top/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>论文笔记:Neural_Network Based_Graph_Embedding_for_Cross Platform</title>
      <link>http://anfieldqi.top/2020/neural_network-based_graph_embedding_for_cross-platform/</link>
      <pubDate>Fri, 27 Nov 2020 14:12:04 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/neural_network-based_graph_embedding_for_cross-platform/</guid>
      <description>1. 题目 Neural Network-based Graph Embedding for Cross-Platform Binary Code Similarity Detection 2.技术背景 2.1 背景 给定两个二进制函数，我们想检测它们是否相似。这个问题被称为“二进制代码相似性检测”，它有很多安全</description>
    </item>
    
    <item>
      <title>基于同源性分析的嵌入式设备固件漏洞检测</title>
      <link>http://anfieldqi.top/2020/%E5%9F%BA%E4%BA%8E%E5%90%8C%E6%BA%90%E6%80%A7%E5%88%86%E6%9E%90%E7%9A%84%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%AE%BE%E5%A4%87%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</link>
      <pubDate>Sat, 14 Nov 2020 15:30:16 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/%E5%9F%BA%E4%BA%8E%E5%90%8C%E6%BA%90%E6%80%A7%E5%88%86%E6%9E%90%E7%9A%84%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%AE%BE%E5%A4%87%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</guid>
      <description>1.题目 基于同源性分析的嵌入式设备固件漏洞检测 2. 主要内容 基于第三方库同源性分析提出一种嵌入式设备固件漏洞检测方法 ，通过对固件分类&#39;并采用二进</description>
    </item>
    
    <item>
      <title>论文:Scalable Graph-based Bug Search for Firmware Images</title>
      <link>http://anfieldqi.top/2020/scalable_graph_based_bug_search/</link>
      <pubDate>Mon, 05 Oct 2020 11:34:20 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/scalable_graph_based_bug_search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>论文:A_Case_Study_on_Embedded_Web_Interfaces</title>
      <link>http://anfieldqi.top/2020/a_case_study_on_embedded_web_interfaces/</link>
      <pubDate>Tue, 08 Sep 2020 17:24:47 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/a_case_study_on_embedded_web_interfaces/</guid>
      <description>1.题目 Automated Dynamic Firmware Analysis at Scale: A Case Study on Embedded Web Interfaces 2.主要内容 2.1 论文内容 提出了第一个完全自动化的框架，它应用动态固件分析技术，以可扩展的方式实现嵌入式固件映</description>
    </item>
    
    <item>
      <title>论文:Avatar动态测试框架2</title>
      <link>http://anfieldqi.top/2020/avatar2/</link>
      <pubDate>Tue, 08 Sep 2020 15:50:05 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/avatar2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>论文:Discovering_and_understanding_the_security_hazards_in_the_interactions</title>
      <link>http://anfieldqi.top/2020/discovering_and_understanding_the_security_hazards_in_the_interactions/</link>
      <pubDate>Mon, 31 Aug 2020 14:56:35 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/discovering_and_understanding_the_security_hazards_in_the_interactions/</guid>
      <description>1.题目 Discovering and Understanding the Security Hazards in the Interactions between IoT Devices, Mobile Apps, and Clouds on Smart Home Platforms 2.主要内容 2.1 论文内容 本论文研究的主要内容集中在**(1)物联网设备(2)移动APP(3)物</description>
    </item>
    
    <item>
      <title>Kyland_sensitive information disclosure vulnerability</title>
      <link>http://anfieldqi.top/2020/kyland_2/</link>
      <pubDate>Thu, 27 Aug 2020 20:27:02 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/kyland_2/</guid>
      <description>Below we briefly describe the vulnerability verification process with a simple example. In kyland&amp;rsquo;s http service, when we audit its webadminget.cgi file, there is an instruction to print the password. The source code is as follows: We request the cgi script through the browser. The details are shown in the following figure. You can see that the user name and password are all displayed in plain text, so there is</description>
    </item>
    
    <item>
      <title>Vulnerability verification for Kyland</title>
      <link>http://anfieldqi.top/2020/kyland_test/</link>
      <pubDate>Thu, 27 Aug 2020 19:17:39 +0800</pubDate>
      
      <guid>http://anfieldqi.top/2020/kyland_test/</guid>
      <description>Below we briefly describe the vulnerability verification process with a simple example. Run the firmware to be tested in the simulation environment, we open its http service, and the running script is in /sbin/httpd or run the device directly Then we use the browser to request the http service of the firmware. There are many interactive interfaces found among them. Find its html source code and cgi script by viewing</description>
    </item>
    
  </channel>
</rss>